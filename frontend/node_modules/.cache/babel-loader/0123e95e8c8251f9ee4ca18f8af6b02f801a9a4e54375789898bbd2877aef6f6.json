{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\Coastline\\\\frontend\\\\src\\\\FileUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUpload = ({\n  onUploadSuccess\n}) => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const handleUpload = async e => {\n    e.preventDefault();\n    if (!file) return;\n    setLoading(true);\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      const response = await axios.post('http://localhost:5000/upload-shapefile', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      onUploadSuccess(response.data.geojson);\n    } catch (error) {\n      console.error('Upload error:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleUpload,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".zip\",\n        onChange: e => setFile(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: !file || loading,\n        children: loading ? 'Uploading...' : 'Upload Shapefile'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(FileUpload, \"b5r+Px8JiWNYfU82tOaR18FdgbQ=\");\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","FileUpload","onUploadSuccess","_s","file","setFile","loading","setLoading","handleUpload","e","preventDefault","formData","FormData","append","response","post","headers","data","geojson","error","console","className","children","onSubmit","type","accept","onChange","target","files","fileName","_jsxFileName","lineNumber","columnNumber","disabled","_c","$RefreshReg$"],"sources":["C:/Users/dell/Desktop/Coastline/frontend/src/FileUpload.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst FileUpload = ({ onUploadSuccess }) => {\r\n    const [file, setFile] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const handleUpload = async (e) => {\r\n        e.preventDefault();\r\n        if (!file) return;\r\n\r\n        setLoading(true);\r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n\r\n        try {\r\n            const response = await axios.post('http://localhost:5000/upload-shapefile', formData, {\r\n                headers: { 'Content-Type': 'multipart/form-data' }\r\n            });\r\n            onUploadSuccess(response.data.geojson);\r\n        } catch (error) {\r\n            console.error('Upload error:', error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"upload-container\">\r\n            <form onSubmit={handleUpload}>\r\n                <input \r\n                    type=\"file\" \r\n                    accept=\".zip\"\r\n                    onChange={(e) => setFile(e.target.files[0])}\r\n                />\r\n                <button type=\"submit\" disabled={!file || loading}>\r\n                    {loading ? 'Uploading...' : 'Upload Shapefile'}\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FileUpload;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAgB,CAAC,KAAK;EAAAC,EAAA;EACxC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMW,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAACN,IAAI,EAAE;IAEXG,UAAU,CAAC,IAAI,CAAC;IAChB,MAAMI,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAET,IAAI,CAAC;IAE7B,IAAI;MACA,MAAMU,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,IAAI,CAAC,wCAAwC,EAAEJ,QAAQ,EAAE;QAClFK,OAAO,EAAE;UAAE,cAAc,EAAE;QAAsB;MACrD,CAAC,CAAC;MACFd,eAAe,CAACY,QAAQ,CAACG,IAAI,CAACC,OAAO,CAAC;IAC1C,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;IACzC,CAAC,SAAS;MACNZ,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC;EAED,oBACIP,OAAA;IAAKqB,SAAS,EAAC,kBAAkB;IAAAC,QAAA,eAC7BtB,OAAA;MAAMuB,QAAQ,EAAEf,YAAa;MAAAc,QAAA,gBACzBtB,OAAA;QACIwB,IAAI,EAAC,MAAM;QACXC,MAAM,EAAC,MAAM;QACbC,QAAQ,EAAGjB,CAAC,IAAKJ,OAAO,CAACI,CAAC,CAACkB,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C,CAAC,eACFhC,OAAA;QAAQwB,IAAI,EAAC,QAAQ;QAACS,QAAQ,EAAE,CAAC7B,IAAI,IAAIE,OAAQ;QAAAgB,QAAA,EAC5ChB,OAAO,GAAG,cAAc,GAAG;MAAkB;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd,CAAC;AAAC7B,EAAA,CAtCIF,UAAU;AAAAiC,EAAA,GAAVjC,UAAU;AAwChB,eAAeA,UAAU;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}