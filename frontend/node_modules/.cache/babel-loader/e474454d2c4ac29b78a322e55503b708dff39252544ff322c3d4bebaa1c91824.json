{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\Coastline\\\\coastline_analysis\\\\frontend\\\\src\\\\MapComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { MapContainer, TileLayer, GeoJSON, ImageOverlay } from 'react-leaflet';\nimport axios from 'axios';\nimport DatePicker from './DatePicker';\nimport 'leaflet/dist/leaflet.css';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapComponent = () => {\n  _s();\n  const [mapData, setMapData] = useState({\n    baseline: null,\n    shoreline: null,\n    rgbThumbnail: null,\n    bounds: null\n  });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Load baseline on component mount\n  useEffect(() => {\n    const loadBaseline = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/get-baseline');\n        setMapData(prev => ({\n          ...prev,\n          baseline: response.data\n        }));\n      } catch (error) {\n        console.error('Error loading baseline:', error);\n      }\n    };\n    loadBaseline();\n  }, []);\n  const handleDateSelect = async endDate => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await axios.post('http://localhost:5000/get-map-data', {\n        end_date: endDate\n      });\n      setMapData({\n        baseline: mapData.baseline,\n        // Preserve existing baseline\n        shoreline: response.data.shoreline,\n        rgbThumbnail: response.data.rgb_thumbnail,\n        bounds: response.data.bounds\n      });\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || \"Analysis failed. Try dates between 2017-2023\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-container\",\n    children: /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [46.5107, -63.4168],\n      zoom: 10,\n      style: {\n        height: '100vh',\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        attribution: \"\\xA9 OpenStreetMap contributors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), mapData.baseline && /*#__PURE__*/_jsxDEV(GeoJSON, {\n        data: mapData.baseline,\n        style: {\n          color: '#ff0000',\n          weight: 2\n        },\n        onEachFeature: (feature, layer) => {\n          layer.bindTooltip(\"PEI Baseline Coastline (2000)\");\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this), mapData.rgbThumbnail && mapData.bounds && /*#__PURE__*/_jsxDEV(ImageOverlay, {\n        url: mapData.rgbThumbnail,\n        bounds: mapData.bounds,\n        opacity: 0.8\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this), mapData.shoreline && /*#__PURE__*/_jsxDEV(GeoJSON, {\n        data: mapData.shoreline,\n        style: {\n          color: '#0000ff',\n          weight: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control-panel\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"PEI Coastal Analysis\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n            onDateSelect: handleDateSelect\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-state\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"spinner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 33\n            }, this), \"Processing Satellite Imagery\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 29\n          }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-state\",\n            children: [\"\\u26A0\\uFE0F Error: \", error]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n_s(MapComponent, \"YeOv4r9vyCpHbz4P6BNih/Ee9n8=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useState","useEffect","MapContainer","TileLayer","GeoJSON","ImageOverlay","axios","DatePicker","jsxDEV","_jsxDEV","MapComponent","_s","mapData","setMapData","baseline","shoreline","rgbThumbnail","bounds","loading","setLoading","error","setError","loadBaseline","response","get","prev","data","console","handleDateSelect","endDate","post","end_date","rgb_thumbnail","_error$response","_error$response$data","className","children","center","zoom","style","height","width","url","attribution","fileName","_jsxFileName","lineNumber","columnNumber","color","weight","onEachFeature","feature","layer","bindTooltip","opacity","onDateSelect","_c","$RefreshReg$"],"sources":["C:/Users/dell/Desktop/Coastline/coastline_analysis/frontend/src/MapComponent.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { MapContainer, TileLayer, GeoJSON, ImageOverlay } from 'react-leaflet';\r\nimport axios from 'axios';\r\nimport DatePicker from './DatePicker';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport './styles.css';\r\n\r\nconst MapComponent = () => {\r\n    const [mapData, setMapData] = useState({\r\n        baseline: null,\r\n        shoreline: null,\r\n        rgbThumbnail: null,\r\n        bounds: null\r\n    });\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    // Load baseline on component mount\r\n    useEffect(() => {\r\n        const loadBaseline = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:5000/get-baseline');\r\n                setMapData(prev => ({\r\n                    ...prev,\r\n                    baseline: response.data\r\n                }));\r\n            } catch (error) {\r\n                console.error('Error loading baseline:', error);\r\n            }\r\n        };\r\n        loadBaseline();\r\n    }, []);\r\n\r\n    const handleDateSelect = async (endDate) => {\r\n        setLoading(true);\r\n        setError(null);\r\n        try {\r\n            const response = await axios.post('http://localhost:5000/get-map-data', {\r\n                end_date: endDate\r\n            });\r\n\r\n            setMapData({\r\n                baseline: mapData.baseline, // Preserve existing baseline\r\n                shoreline: response.data.shoreline,\r\n                rgbThumbnail: response.data.rgb_thumbnail,\r\n                bounds: response.data.bounds\r\n            });\r\n\r\n        } catch (error) {\r\n            setError(error.response?.data?.error || \"Analysis failed. Try dates between 2017-2023\");\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"map-container\">\r\n            <MapContainer \r\n                center={[46.5107, -63.4168]}\r\n                zoom={10}\r\n                style={{ height: '100vh', width: '100%' }}\r\n            >\r\n                <TileLayer\r\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                    attribution='&copy; OpenStreetMap contributors'\r\n                />\r\n\r\n                {/* Baseline Coastline */}\r\n                {mapData.baseline && (\r\n                    <GeoJSON \r\n                        data={mapData.baseline}\r\n                        style={{ color: '#ff0000', weight: 2 }}\r\n                        onEachFeature={(feature, layer) => {\r\n                            layer.bindTooltip(\"PEI Baseline Coastline (2000)\");\r\n                        }}\r\n                    />\r\n                )}\r\n\r\n                {/* Satellite Imagery */}\r\n                {mapData.rgbThumbnail && mapData.bounds && (\r\n                    <ImageOverlay \r\n                        url={mapData.rgbThumbnail}\r\n                        bounds={mapData.bounds}\r\n                        opacity={0.8}\r\n                    />\r\n                )}\r\n\r\n                {/* Current Shoreline */}\r\n                {mapData.shoreline && (\r\n                    <GeoJSON \r\n                        data={mapData.shoreline}\r\n                        style={{ color: '#0000ff', weight: 2 }}\r\n                    />\r\n                )}\r\n\r\n                {/* Control Panel */}\r\n                <div className=\"control-panel\">\r\n                    <div className=\"control-section\">\r\n                        <h3>PEI Coastal Analysis</h3>\r\n                        <DatePicker onDateSelect={handleDateSelect} />\r\n                        \r\n                        {loading && (\r\n                            <div className=\"loading-state\">\r\n                                <div className=\"spinner\"></div>\r\n                                Processing Satellite Imagery\r\n                            </div>\r\n                        )}\r\n\r\n                        {error && (\r\n                            <div className=\"error-state\">\r\n                                ⚠️ Error: {error}\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </MapContainer>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MapComponent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}