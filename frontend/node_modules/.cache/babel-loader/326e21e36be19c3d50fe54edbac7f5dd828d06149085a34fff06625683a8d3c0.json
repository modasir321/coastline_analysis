{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\Coastline\\\\frontend\\\\src\\\\MapComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { MapContainer, TileLayer, ImageOverlay, GeoJSON } from 'react-leaflet';\nimport L from 'leaflet';\nimport axios from 'axios';\nimport * as turf from '@turf/turf';\nimport DatePicker from './DatePicker';\nimport 'leaflet/dist/leaflet.css';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst layerStyles = {\n  waterBoundary: {\n    color: '#00f',\n    weight: 2,\n    fillOpacity: 0\n  },\n  studyArea: {\n    color: '#ff0000',\n    weight: 2\n  },\n  changeErosion: {\n    color: '#ff0000',\n    weight: 3,\n    dashArray: '5,5',\n    fillColor: '#ff0000',\n    fillOpacity: 0.3\n  },\n  changeAccretion: {\n    color: '#00ff00',\n    weight: 3,\n    dashArray: '5,5',\n    fillColor: '#00ff00',\n    fillOpacity: 0.3\n  }\n};\nconst MapComponent = () => {\n  _s();\n  const [mapInstance, setMapInstance] = useState(null);\n  const [mapData, setMapData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [activeLayer, setActiveLayer] = useState('change');\n  const [selectedPeriod, setSelectedPeriod] = useState('both');\n  const handleDateSelect = async (startDate, endDate) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await axios.post('http://localhost:5000/get-map-data', {\n        start_date: startDate,\n        end_date: endDate\n      });\n      if (response.data.error) throw new Error(response.data.error);\n      setMapData(response.data);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Error loading data:', error);\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleDownloadData = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/download-change-data', {\n        geojson: mapData.water_boundaries\n      }, {\n        responseType: 'blob'\n      });\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', 'coastline_changes.zip');\n      document.body.appendChild(link);\n      link.click();\n      link.remove();\n    } catch (error) {\n      console.error('Download failed:', error);\n      setError('Failed to download change data');\n    }\n  };\n  const simplifyGeometry = geometry => {\n    try {\n      return turf.simplify(turf.feature(geometry), {\n        tolerance: 0.001,\n        highQuality: true\n      }).geometry;\n    } catch (e) {\n      console.error('Geometry simplification failed:', e);\n      return geometry;\n    }\n  };\n  const renderChangeAnalysis = () => {\n    var _mapData$water_bounda, _mapData$water_bounda2, _mapData$water_bounda3, _mapData$water_bounda4, _mapData$water_bounda5, _mapData$water_bounda6, _mapData$water_bounda7, _mapData$water_bounda8;\n    if (!(mapData !== null && mapData !== void 0 && mapData.water_boundaries)) return null;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [selectedPeriod !== 'comparison' && ((_mapData$water_bounda = mapData.water_boundaries.baseline) === null || _mapData$water_bounda === void 0 ? void 0 : (_mapData$water_bounda2 = _mapData$water_bounda.features) === null || _mapData$water_bounda2 === void 0 ? void 0 : _mapData$water_bounda2.map((feature, index) => /*#__PURE__*/_jsxDEV(GeoJSON, {\n        data: simplifyGeometry(feature.geometry),\n        style: {\n          ...layerStyles.waterBoundary,\n          color: '#0000ff'\n        }\n      }, `base-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this))), selectedPeriod !== 'baseline' && ((_mapData$water_bounda3 = mapData.water_boundaries.comparison) === null || _mapData$water_bounda3 === void 0 ? void 0 : (_mapData$water_bounda4 = _mapData$water_bounda3.features) === null || _mapData$water_bounda4 === void 0 ? void 0 : _mapData$water_bounda4.map((feature, index) => /*#__PURE__*/_jsxDEV(GeoJSON, {\n        data: simplifyGeometry(feature.geometry),\n        style: {\n          ...layerStyles.waterBoundary,\n          color: '#00ff00'\n        }\n      }, `comp-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this))), (_mapData$water_bounda5 = mapData.water_boundaries.erosion) === null || _mapData$water_bounda5 === void 0 ? void 0 : (_mapData$water_bounda6 = _mapData$water_bounda5.features) === null || _mapData$water_bounda6 === void 0 ? void 0 : _mapData$water_bounda6.map((feature, index) => /*#__PURE__*/_jsxDEV(GeoJSON, {\n        data: simplifyGeometry(feature.geometry),\n        style: layerStyles.changeErosion\n      }, `ero-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this)), (_mapData$water_bounda7 = mapData.water_boundaries.accretion) === null || _mapData$water_bounda7 === void 0 ? void 0 : (_mapData$water_bounda8 = _mapData$water_bounda7.features) === null || _mapData$water_bounda8 === void 0 ? void 0 : _mapData$water_bounda8.map((feature, index) => /*#__PURE__*/_jsxDEV(GeoJSON, {\n        data: simplifyGeometry(feature.geometry),\n        style: layerStyles.changeAccretion\n      }, `acc-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true);\n  };\n  const renderLayerControls = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"layer-controls\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"time-period-selector\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `time-period-btn ${selectedPeriod === 'both' ? 'active' : ''}`,\n        onClick: () => setSelectedPeriod('both'),\n        children: \"Both\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `time-period-btn ${selectedPeriod === 'baseline' ? 'active' : ''}`,\n        onClick: () => setSelectedPeriod('baseline'),\n        children: \"Baseline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `time-period-btn ${selectedPeriod === 'comparison' ? 'active' : ''}`,\n        onClick: () => setSelectedPeriod('comparison'),\n        children: \"Current\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: activeLayer === 'change' ? 'active' : '',\n      onClick: () => setActiveLayer('change'),\n      children: \"Change Analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: activeLayer === 'rgb' ? 'active' : '',\n      onClick: () => setActiveLayer('rgb'),\n      children: \"Satellite\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), (mapData === null || mapData === void 0 ? void 0 : mapData.water_boundaries) && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"download-btn\",\n      onClick: handleDownloadData,\n      children: \"Export Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n  const ChangeLegend = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"change-legend\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Legend\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"legend-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"legend-color\",\n        style: {\n          backgroundColor: '#0000ff'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"2016 Baseline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"legend-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"legend-color\",\n        style: {\n          backgroundColor: '#00ff00'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Current Coast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"legend-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"legend-color\",\n        style: {\n          backgroundColor: '#ff0000'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Erosion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"legend-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"legend-color\",\n        style: {\n          backgroundColor: '#00ff00'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Accretion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-container\",\n    children: [/*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [46.5107, -63.4168],\n      zoom: 9,\n      style: {\n        height: '600px',\n        width: '100%'\n      },\n      whenCreated: setMapInstance,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        attribution: \"\\xA9 OpenStreetMap contributors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), activeLayer === 'rgb' && (mapData === null || mapData === void 0 ? void 0 : mapData.comparison_image) && /*#__PURE__*/_jsxDEV(ImageOverlay, {\n        url: mapData.comparison_image,\n        bounds: mapData.bounds,\n        opacity: 0.8\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }, this), activeLayer === 'change' && renderChangeAnalysis(), /*#__PURE__*/_jsxDEV(GeoJSON, {\n        data: mapData === null || mapData === void 0 ? void 0 : mapData.geojson,\n        style: layerStyles.studyArea\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChangeLegend, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar right-sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Coastal Change Analyzer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n          onDateSelect: handleDateSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), renderLayerControls()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-overlay\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 11\n      }, this), \"Analyzing coastal changes...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-overlay\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 211,\n    columnNumber: 5\n  }, this);\n};\n_s(MapComponent, \"CD9b6FtpljS8Qgt+tDv4eCbK0jQ=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useEffect","useState","MapContainer","TileLayer","ImageOverlay","GeoJSON","L","axios","turf","DatePicker","jsxDEV","_jsxDEV","Fragment","_Fragment","layerStyles","waterBoundary","color","weight","fillOpacity","studyArea","changeErosion","dashArray","fillColor","changeAccretion","MapComponent","_s","mapInstance","setMapInstance","mapData","setMapData","loading","setLoading","error","setError","activeLayer","setActiveLayer","selectedPeriod","setSelectedPeriod","handleDateSelect","startDate","endDate","response","post","start_date","end_date","data","Error","_error$response","_error$response$data","console","message","handleDownloadData","geojson","water_boundaries","responseType","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","remove","simplifyGeometry","geometry","simplify","feature","tolerance","highQuality","e","renderChangeAnalysis","_mapData$water_bounda","_mapData$water_bounda2","_mapData$water_bounda3","_mapData$water_bounda4","_mapData$water_bounda5","_mapData$water_bounda6","_mapData$water_bounda7","_mapData$water_bounda8","children","baseline","features","map","index","style","fileName","_jsxFileName","lineNumber","columnNumber","comparison","erosion","accretion","renderLayerControls","className","onClick","ChangeLegend","backgroundColor","center","zoom","height","width","whenCreated","attribution","comparison_image","bounds","opacity","onDateSelect","_c","$RefreshReg$"],"sources":["C:/Users/dell/Desktop/Coastline/frontend/src/MapComponent.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { MapContainer, TileLayer, ImageOverlay, GeoJSON } from 'react-leaflet';\r\nimport L from 'leaflet';\r\nimport axios from 'axios';\r\nimport * as turf from '@turf/turf';\r\nimport DatePicker from './DatePicker';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport './styles.css';\r\n\r\nconst layerStyles = {\r\n  waterBoundary: {\r\n    color: '#00f',\r\n    weight: 2,\r\n    fillOpacity: 0\r\n  },\r\n  studyArea: {\r\n    color: '#ff0000',\r\n    weight: 2\r\n  },\r\n  changeErosion: {\r\n    color: '#ff0000',\r\n    weight: 3,\r\n    dashArray: '5,5',\r\n    fillColor: '#ff0000',\r\n    fillOpacity: 0.3\r\n  },\r\n  changeAccretion: {\r\n    color: '#00ff00',\r\n    weight: 3,\r\n    dashArray: '5,5',\r\n    fillColor: '#00ff00',\r\n    fillOpacity: 0.3\r\n  }\r\n};\r\n\r\nconst MapComponent = () => {\r\n  const [mapInstance, setMapInstance] = useState(null);\r\n  const [mapData, setMapData] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [activeLayer, setActiveLayer] = useState('change');\r\n  const [selectedPeriod, setSelectedPeriod] = useState('both');\r\n\r\n  const handleDateSelect = async (startDate, endDate) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/get-map-data', {\r\n        start_date: startDate,\r\n        end_date: endDate\r\n      });\r\n\r\n      if (response.data.error) throw new Error(response.data.error);\r\n      setMapData(response.data);\r\n    } catch (error) {\r\n      console.error('Error loading data:', error);\r\n      setError(error.response?.data?.error || error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleDownloadData = async () => {\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/download-change-data', {\r\n        geojson: mapData.water_boundaries\r\n      }, {\r\n        responseType: 'blob'\r\n      });\r\n\r\n      const url = window.URL.createObjectURL(new Blob([response.data]));\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.setAttribute('download', 'coastline_changes.zip');\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      link.remove();\r\n    } catch (error) {\r\n      console.error('Download failed:', error);\r\n      setError('Failed to download change data');\r\n    }\r\n  };\r\n\r\n  const simplifyGeometry = (geometry) => {\r\n    try {\r\n      return turf.simplify(turf.feature(geometry), {\r\n        tolerance: 0.001,\r\n        highQuality: true\r\n      }).geometry;\r\n    } catch (e) {\r\n      console.error('Geometry simplification failed:', e);\r\n      return geometry;\r\n    }\r\n  };\r\n\r\n  const renderChangeAnalysis = () => {\r\n    if (!mapData?.water_boundaries) return null;\r\n\r\n    return (\r\n      <>\r\n        {/* Baseline coastline */}\r\n        {selectedPeriod !== 'comparison' && mapData.water_boundaries.baseline?.features?.map((feature, index) => (\r\n          <GeoJSON\r\n            key={`base-${index}`}\r\n            data={simplifyGeometry(feature.geometry)}\r\n            style={{ ...layerStyles.waterBoundary, color: '#0000ff' }}\r\n          />\r\n        ))}\r\n\r\n        {/* Comparison coastline */}\r\n        {selectedPeriod !== 'baseline' && mapData.water_boundaries.comparison?.features?.map((feature, index) => (\r\n          <GeoJSON\r\n            key={`comp-${index}`}\r\n            data={simplifyGeometry(feature.geometry)}\r\n            style={{ ...layerStyles.waterBoundary, color: '#00ff00' }}\r\n          />\r\n        ))}\r\n\r\n        {/* Erosion areas */}\r\n        {mapData.water_boundaries.erosion?.features?.map((feature, index) => (\r\n          <GeoJSON\r\n            key={`ero-${index}`}\r\n            data={simplifyGeometry(feature.geometry)}\r\n            style={layerStyles.changeErosion}\r\n          />\r\n        ))}\r\n\r\n        {/* Accretion areas */}\r\n        {mapData.water_boundaries.accretion?.features?.map((feature, index) => (\r\n          <GeoJSON\r\n            key={`acc-${index}`}\r\n            data={simplifyGeometry(feature.geometry)}\r\n            style={layerStyles.changeAccretion}\r\n          />\r\n        ))}\r\n      </>\r\n    );\r\n  };\r\n\r\n  const renderLayerControls = () => (\r\n    <div className=\"layer-controls\">\r\n      <div className=\"time-period-selector\">\r\n        <button\r\n          className={`time-period-btn ${selectedPeriod === 'both' ? 'active' : ''}`}\r\n          onClick={() => setSelectedPeriod('both')}\r\n        >\r\n          Both\r\n        </button>\r\n        <button\r\n          className={`time-period-btn ${selectedPeriod === 'baseline' ? 'active' : ''}`}\r\n          onClick={() => setSelectedPeriod('baseline')}\r\n        >\r\n          Baseline\r\n        </button>\r\n        <button\r\n          className={`time-period-btn ${selectedPeriod === 'comparison' ? 'active' : ''}`}\r\n          onClick={() => setSelectedPeriod('comparison')}\r\n        >\r\n          Current\r\n        </button>\r\n      </div>\r\n\r\n      <button\r\n        className={activeLayer === 'change' ? 'active' : ''}\r\n        onClick={() => setActiveLayer('change')}\r\n      >\r\n        Change Analysis\r\n      </button>\r\n      \r\n      <button\r\n        className={activeLayer === 'rgb' ? 'active' : ''}\r\n        onClick={() => setActiveLayer('rgb')}\r\n      >\r\n        Satellite\r\n      </button>\r\n\r\n      {mapData?.water_boundaries && (\r\n        <button\r\n          className=\"download-btn\"\r\n          onClick={handleDownloadData}\r\n        >\r\n          Export Data\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  const ChangeLegend = () => (\r\n    <div className=\"change-legend\">\r\n      <h4>Legend</h4>\r\n      <div className=\"legend-item\">\r\n        <div className=\"legend-color\" style={{ backgroundColor: '#0000ff' }} />\r\n        <span>2016 Baseline</span>\r\n      </div>\r\n      <div className=\"legend-item\">\r\n        <div className=\"legend-color\" style={{ backgroundColor: '#00ff00' }} />\r\n        <span>Current Coast</span>\r\n      </div>\r\n      <div className=\"legend-item\">\r\n        <div className=\"legend-color\" style={{ backgroundColor: '#ff0000' }} />\r\n        <span>Erosion</span>\r\n      </div>\r\n      <div className=\"legend-item\">\r\n        <div className=\"legend-color\" style={{ backgroundColor: '#00ff00' }} />\r\n        <span>Accretion</span>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"map-container\">\r\n      <MapContainer \r\n        center={[46.5107, -63.4168]}\r\n        zoom={9}\r\n        style={{ height: '600px', width: '100%' }}\r\n        whenCreated={setMapInstance}\r\n      >\r\n        <TileLayer\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          attribution='&copy; OpenStreetMap contributors'\r\n        />\r\n\r\n        {activeLayer === 'rgb' && mapData?.comparison_image && (\r\n          <ImageOverlay\r\n            url={mapData.comparison_image}\r\n            bounds={mapData.bounds}\r\n            opacity={0.8}\r\n          />\r\n        )}\r\n\r\n        {activeLayer === 'change' && renderChangeAnalysis()}\r\n\r\n        <GeoJSON \r\n          data={mapData?.geojson}\r\n          style={layerStyles.studyArea}\r\n        />\r\n        <ChangeLegend />\r\n      </MapContainer>\r\n\r\n      <div className=\"sidebar right-sidebar\">\r\n        <div className=\"sidebar-header\">\r\n          <h3>Coastal Change Analyzer</h3>\r\n          <DatePicker onDateSelect={handleDateSelect} />\r\n        </div>\r\n        {renderLayerControls()}\r\n      </div>\r\n\r\n      {loading && (\r\n        <div className=\"loading-overlay\">\r\n          <div className=\"spinner\"></div>\r\n          Analyzing coastal changes...\r\n        </div>\r\n      )}\r\n      {error && <div className=\"error-overlay\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapComponent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}