{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\Coastline\\\\coastline_analysis\\\\frontend\\\\src\\\\MapComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { MapContainer, TileLayer, ImageOverlay, GeoJSON } from 'react-leaflet';\nimport L from 'leaflet';\nimport axios from 'axios';\nimport * as turf from '@turf/turf';\nimport DatePicker from './DatePicker';\nimport 'leaflet/dist/leaflet.css';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst layerStyles = {\n  waterBoundary: {\n    color: '#00f',\n    weight: 2,\n    fillOpacity: 0\n  },\n  studyArea: {\n    color: '#ff0000',\n    weight: 2\n  },\n  changeErosion: {\n    color: '#ff0000',\n    weight: 3,\n    dashArray: '5,5',\n    fillColor: '#ff0000',\n    fillOpacity: 0.3\n  },\n  changeAccretion: {\n    color: '#00ff00',\n    weight: 3,\n    dashArray: '5,5',\n    fillColor: '#00ff00',\n    fillOpacity: 0.3\n  }\n};\nconst MapComponent = () => {\n  _s();\n  const [mapInstance, setMapInstance] = useState(null);\n  const [mapData, setMapData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [activeLayer, setActiveLayer] = useState('change');\n  const [selectedPeriod, setSelectedPeriod] = useState('both');\n\n  // New function to handle shapefile comparison\n  const handleDateSelect = async (startDate, endDate) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await axios.post('http://localhost:5000/get-map-data', {\n        start_date: startDate,\n        end_date: endDate\n      });\n      if (response.data.error) throw new Error(response.data.error);\n\n      // Merge 2001 baseline with new data\n      setMapData({\n        ...response.data,\n        baseline_geojson: response.data.baseline_geojson\n      });\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Error loading data:', error);\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Updated download handler\n  const handleDownloadData = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/download-change-data', {\n        baseline: mapData.baseline_geojson,\n        comparison: mapData.water_boundaries\n      }, {\n        responseType: 'blob'\n      });\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', 'coastline_changes_2001_comparison.zip');\n      document.body.appendChild(link);\n      link.click();\n      link.remove();\n    } catch (error) {\n      console.error('Download failed:', error);\n      setError('Failed to download change data');\n    }\n  };\n\n  // Simplify geometry function remains the same\n  const simplifyGeometry = geometry => {\n    try {\n      return turf.simplify(turf.feature(geometry), {\n        tolerance: 0.001,\n        highQuality: true\n      }).geometry;\n    } catch (e) {\n      console.error('Geometry simplification failed:', e);\n      return geometry;\n    }\n  };\n\n  // Updated render function for 2001 comparison\n  const renderChangeAnalysis = () => {\n    var _mapData$water_bounda, _mapData$water_bounda2, _mapData$water_bounda3, _mapData$water_bounda4, _mapData$water_bounda5, _mapData$water_bounda6, _mapData$water_bounda7, _mapData$water_bounda8, _mapData$water_bounda9;\n    if (!mapData) return null;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(GeoJSON, {\n        data: mapData.baseline_geojson,\n        style: {\n          ...layerStyles.waterBoundary,\n          color: '#0000ff'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), selectedPeriod !== 'baseline' && ((_mapData$water_bounda = mapData.water_boundaries) === null || _mapData$water_bounda === void 0 ? void 0 : (_mapData$water_bounda2 = _mapData$water_bounda.comparison) === null || _mapData$water_bounda2 === void 0 ? void 0 : (_mapData$water_bounda3 = _mapData$water_bounda2.features) === null || _mapData$water_bounda3 === void 0 ? void 0 : _mapData$water_bounda3.map((feature, index) => /*#__PURE__*/_jsxDEV(GeoJSON, {\n        data: simplifyGeometry(feature.geometry),\n        style: {\n          ...layerStyles.waterBoundary,\n          color: '#00ff00'\n        }\n      }, `comp-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this))), (_mapData$water_bounda4 = mapData.water_boundaries) === null || _mapData$water_bounda4 === void 0 ? void 0 : (_mapData$water_bounda5 = _mapData$water_bounda4.erosion) === null || _mapData$water_bounda5 === void 0 ? void 0 : (_mapData$water_bounda6 = _mapData$water_bounda5.features) === null || _mapData$water_bounda6 === void 0 ? void 0 : _mapData$water_bounda6.map((feature, index) => /*#__PURE__*/_jsxDEV(GeoJSON, {\n        data: simplifyGeometry(feature.geometry),\n        style: layerStyles.changeErosion\n      }, `ero-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this)), (_mapData$water_bounda7 = mapData.water_boundaries) === null || _mapData$water_bounda7 === void 0 ? void 0 : (_mapData$water_bounda8 = _mapData$water_bounda7.accretion) === null || _mapData$water_bounda8 === void 0 ? void 0 : (_mapData$water_bounda9 = _mapData$water_bounda8.features) === null || _mapData$water_bounda9 === void 0 ? void 0 : _mapData$water_bounda9.map((feature, index) => /*#__PURE__*/_jsxDEV(GeoJSON, {\n        data: simplifyGeometry(feature.geometry),\n        style: layerStyles.changeAccretion\n      }, `acc-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true);\n  };\n\n  // Updated legend\n  const ChangeLegend = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"change-legend\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Legend\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"legend-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"legend-color\",\n        style: {\n          backgroundColor: '#0000ff'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"2001 Baseline (Shapefile)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"legend-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"legend-color\",\n        style: {\n          backgroundColor: '#00ff00'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Current Coastline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"legend-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"legend-color\",\n        style: {\n          backgroundColor: '#ff0000'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Erosion since 2001\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"legend-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"legend-color\",\n        style: {\n          backgroundColor: '#00ff00'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Accretion since 2001\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-container\",\n    children: [/*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [46.5107, -63.4168],\n      zoom: 9,\n      style: {\n        height: '600px',\n        width: '100%'\n      },\n      whenCreated: setMapInstance,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        attribution: \"\\xA9 OpenStreetMap contributors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), activeLayer === 'rgb' && (mapData === null || mapData === void 0 ? void 0 : mapData.comparison_image) && /*#__PURE__*/_jsxDEV(ImageOverlay, {\n        url: mapData.comparison_image,\n        bounds: mapData.bounds,\n        opacity: 0.8\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this), activeLayer === 'change' && renderChangeAnalysis(), /*#__PURE__*/_jsxDEV(ChangeLegend, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar right-sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Coastal Change Analyzer (2001 Baseline)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n          onDateSelect: handleDateSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"layer-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"time-period-selector\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `time-period-btn ${selectedPeriod === 'both' ? 'active' : ''}`,\n            onClick: () => setSelectedPeriod('both'),\n            children: \"Both\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `time-period-btn ${selectedPeriod === 'baseline' ? 'active' : ''}`,\n            onClick: () => setSelectedPeriod('baseline'),\n            children: \"2001\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `time-period-btn ${selectedPeriod === 'comparison' ? 'active' : ''}`,\n            onClick: () => setSelectedPeriod('comparison'),\n            children: \"Current\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: activeLayer === 'change' ? 'active' : '',\n          onClick: () => setActiveLayer('change'),\n          children: \"Change Analysis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: activeLayer === 'rgb' ? 'active' : '',\n          onClick: () => setActiveLayer('rgb'),\n          children: \"Satellite View\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), (mapData === null || mapData === void 0 ? void 0 : mapData.water_boundaries) && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"download-btn\",\n          onClick: handleDownloadData,\n          children: \"Export Comparison Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-overlay\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 11\n      }, this), \"Analyzing changes since 2001...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-overlay\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 5\n  }, this);\n};\n_s(MapComponent, \"CD9b6FtpljS8Qgt+tDv4eCbK0jQ=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useEffect","useState","MapContainer","TileLayer","ImageOverlay","GeoJSON","L","axios","turf","DatePicker","jsxDEV","_jsxDEV","Fragment","_Fragment","layerStyles","waterBoundary","color","weight","fillOpacity","studyArea","changeErosion","dashArray","fillColor","changeAccretion","MapComponent","_s","mapInstance","setMapInstance","mapData","setMapData","loading","setLoading","error","setError","activeLayer","setActiveLayer","selectedPeriod","setSelectedPeriod","handleDateSelect","startDate","endDate","response","post","start_date","end_date","data","Error","baseline_geojson","_error$response","_error$response$data","console","message","handleDownloadData","baseline","comparison","water_boundaries","responseType","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","remove","simplifyGeometry","geometry","simplify","feature","tolerance","highQuality","e","renderChangeAnalysis","_mapData$water_bounda","_mapData$water_bounda2","_mapData$water_bounda3","_mapData$water_bounda4","_mapData$water_bounda5","_mapData$water_bounda6","_mapData$water_bounda7","_mapData$water_bounda8","_mapData$water_bounda9","children","style","fileName","_jsxFileName","lineNumber","columnNumber","features","map","index","erosion","accretion","ChangeLegend","className","backgroundColor","center","zoom","height","width","whenCreated","attribution","comparison_image","bounds","opacity","onDateSelect","onClick","_c","$RefreshReg$"],"sources":["C:/Users/dell/Desktop/Coastline/coastline_analysis/frontend/src/MapComponent.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { MapContainer, TileLayer, ImageOverlay, GeoJSON } from 'react-leaflet';\r\nimport L from 'leaflet';\r\nimport axios from 'axios';\r\nimport * as turf from '@turf/turf';\r\nimport DatePicker from './DatePicker';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport './styles.css';\r\n\r\nconst layerStyles = {\r\n  waterBoundary: {\r\n    color: '#00f',\r\n    weight: 2,\r\n    fillOpacity: 0\r\n  },\r\n  studyArea: {\r\n    color: '#ff0000',\r\n    weight: 2\r\n  },\r\n  changeErosion: {\r\n    color: '#ff0000',\r\n    weight: 3,\r\n    dashArray: '5,5',\r\n    fillColor: '#ff0000',\r\n    fillOpacity: 0.3\r\n  },\r\n  changeAccretion: {\r\n    color: '#00ff00',\r\n    weight: 3,\r\n    dashArray: '5,5',\r\n    fillColor: '#00ff00',\r\n    fillOpacity: 0.3\r\n  }\r\n};\r\n\r\nconst MapComponent = () => {\r\n  const [mapInstance, setMapInstance] = useState(null);\r\n  const [mapData, setMapData] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [activeLayer, setActiveLayer] = useState('change');\r\n  const [selectedPeriod, setSelectedPeriod] = useState('both');\r\n\r\n  // New function to handle shapefile comparison\r\n  const handleDateSelect = async (startDate, endDate) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/get-map-data', {\r\n        start_date: startDate,\r\n        end_date: endDate\r\n      });\r\n\r\n      if (response.data.error) throw new Error(response.data.error);\r\n      \r\n      // Merge 2001 baseline with new data\r\n      setMapData({\r\n        ...response.data,\r\n        baseline_geojson: response.data.baseline_geojson\r\n      });\r\n      \r\n    } catch (error) {\r\n      console.error('Error loading data:', error);\r\n      setError(error.response?.data?.error || error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Updated download handler\r\n  const handleDownloadData = async () => {\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/download-change-data', {\r\n        baseline: mapData.baseline_geojson,\r\n        comparison: mapData.water_boundaries\r\n      }, {\r\n        responseType: 'blob'\r\n      });\r\n\r\n      const url = window.URL.createObjectURL(new Blob([response.data]));\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.setAttribute('download', 'coastline_changes_2001_comparison.zip');\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      link.remove();\r\n    } catch (error) {\r\n      console.error('Download failed:', error);\r\n      setError('Failed to download change data');\r\n    }\r\n  };\r\n\r\n  // Simplify geometry function remains the same\r\n  const simplifyGeometry = (geometry) => {\r\n    try {\r\n      return turf.simplify(turf.feature(geometry), {\r\n        tolerance: 0.001,\r\n        highQuality: true\r\n      }).geometry;\r\n    } catch (e) {\r\n      console.error('Geometry simplification failed:', e);\r\n      return geometry;\r\n    }\r\n  };\r\n\r\n  // Updated render function for 2001 comparison\r\n  const renderChangeAnalysis = () => {\r\n    if (!mapData) return null;\r\n\r\n    return (\r\n      <>\r\n        {/* 2001 Baseline - Always visible */}\r\n        <GeoJSON\r\n          data={mapData.baseline_geojson}\r\n          style={{ ...layerStyles.waterBoundary, color: '#0000ff' }}\r\n        />\r\n\r\n        {/* Current coastline based on selected dates */}\r\n        {selectedPeriod !== 'baseline' && mapData.water_boundaries?.comparison?.features?.map((feature, index) => (\r\n          <GeoJSON\r\n            key={`comp-${index}`}\r\n            data={simplifyGeometry(feature.geometry)}\r\n            style={{ ...layerStyles.waterBoundary, color: '#00ff00' }}\r\n          />\r\n        ))}\r\n\r\n        {/* Erosion areas */}\r\n        {mapData.water_boundaries?.erosion?.features?.map((feature, index) => (\r\n          <GeoJSON\r\n            key={`ero-${index}`}\r\n            data={simplifyGeometry(feature.geometry)}\r\n            style={layerStyles.changeErosion}\r\n          />\r\n        ))}\r\n\r\n        {/* Accretion areas */}\r\n        {mapData.water_boundaries?.accretion?.features?.map((feature, index) => (\r\n          <GeoJSON\r\n            key={`acc-${index}`}\r\n            data={simplifyGeometry(feature.geometry)}\r\n            style={layerStyles.changeAccretion}\r\n          />\r\n        ))}\r\n      </>\r\n    );\r\n  };\r\n\r\n  // Updated legend\r\n  const ChangeLegend = () => (\r\n    <div className=\"change-legend\">\r\n      <h4>Legend</h4>\r\n      <div className=\"legend-item\">\r\n        <div className=\"legend-color\" style={{ backgroundColor: '#0000ff' }} />\r\n        <span>2001 Baseline (Shapefile)</span>\r\n      </div>\r\n      <div className=\"legend-item\">\r\n        <div className=\"legend-color\" style={{ backgroundColor: '#00ff00' }} />\r\n        <span>Current Coastline</span>\r\n      </div>\r\n      <div className=\"legend-item\">\r\n        <div className=\"legend-color\" style={{ backgroundColor: '#ff0000' }} />\r\n        <span>Erosion since 2001</span>\r\n      </div>\r\n      <div className=\"legend-item\">\r\n        <div className=\"legend-color\" style={{ backgroundColor: '#00ff00' }} />\r\n        <span>Accretion since 2001</span>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"map-container\">\r\n      <MapContainer \r\n        center={[46.5107, -63.4168]}\r\n        zoom={9}\r\n        style={{ height: '600px', width: '100%' }}\r\n        whenCreated={setMapInstance}\r\n      >\r\n        <TileLayer\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          attribution='&copy; OpenStreetMap contributors'\r\n        />\r\n\r\n        {activeLayer === 'rgb' && mapData?.comparison_image && (\r\n          <ImageOverlay\r\n            url={mapData.comparison_image}\r\n            bounds={mapData.bounds}\r\n            opacity={0.8}\r\n          />\r\n        )}\r\n\r\n        {activeLayer === 'change' && renderChangeAnalysis()}\r\n\r\n        <ChangeLegend />\r\n      </MapContainer>\r\n\r\n      <div className=\"sidebar right-sidebar\">\r\n        <div className=\"sidebar-header\">\r\n          <h3>Coastal Change Analyzer (2001 Baseline)</h3>\r\n          <DatePicker onDateSelect={handleDateSelect} />\r\n        </div>\r\n        <div className=\"layer-controls\">\r\n          <div className=\"time-period-selector\">\r\n            <button\r\n              className={`time-period-btn ${selectedPeriod === 'both' ? 'active' : ''}`}\r\n              onClick={() => setSelectedPeriod('both')}\r\n            >\r\n              Both\r\n            </button>\r\n            <button\r\n              className={`time-period-btn ${selectedPeriod === 'baseline' ? 'active' : ''}`}\r\n              onClick={() => setSelectedPeriod('baseline')}\r\n            >\r\n              2001\r\n            </button>\r\n            <button\r\n              className={`time-period-btn ${selectedPeriod === 'comparison' ? 'active' : ''}`}\r\n              onClick={() => setSelectedPeriod('comparison')}\r\n            >\r\n              Current\r\n            </button>\r\n          </div>\r\n          \r\n          <button\r\n            className={activeLayer === 'change' ? 'active' : ''}\r\n            onClick={() => setActiveLayer('change')}\r\n          >\r\n            Change Analysis\r\n          </button>\r\n          \r\n          <button\r\n            className={activeLayer === 'rgb' ? 'active' : ''}\r\n            onClick={() => setActiveLayer('rgb')}\r\n          >\r\n            Satellite View\r\n          </button>\r\n\r\n          {mapData?.water_boundaries && (\r\n            <button\r\n              className=\"download-btn\"\r\n              onClick={handleDownloadData}\r\n            >\r\n              Export Comparison Data\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {loading && (\r\n        <div className=\"loading-overlay\">\r\n          <div className=\"spinner\"></div>\r\n          Analyzing changes since 2001...\r\n        </div>\r\n      )}\r\n      {error && <div className=\"error-overlay\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapComponent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}