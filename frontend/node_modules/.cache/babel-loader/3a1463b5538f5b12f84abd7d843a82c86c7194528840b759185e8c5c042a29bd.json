{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\Coastline\\\\frontend\\\\src\\\\MapComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { MapContainer, TileLayer, ImageOverlay, GeoJSON } from 'react-leaflet';\nimport L from 'leaflet';\nimport axios from 'axios';\nimport * as turf from '@turf/turf';\nimport DatePicker from './DatePicker';\nimport 'leaflet/dist/leaflet.css';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst layerStyles = {\n  waterBoundary: {\n    color: '#00f',\n    weight: 2,\n    fillOpacity: 0\n  },\n  studyArea: {\n    color: '#ff0000',\n    weight: 2\n  },\n  changeErosion: {\n    color: '#ff0000',\n    weight: 3,\n    dashArray: '5,5',\n    fillColor: '#ff0000',\n    fillOpacity: 0.3\n  },\n  changeAccretion: {\n    color: '#00ff00',\n    weight: 3,\n    dashArray: '5,5',\n    fillColor: '#00ff00',\n    fillOpacity: 0.3\n  }\n};\nconst MapComponent = () => {\n  _s();\n  var _mapData$period, _mapData$period2;\n  const [mapInstance, setMapInstance] = useState(null);\n  const [mapData, setMapData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [activeLayer, setActiveLayer] = useState('change');\n  const [selectedPeriod, setSelectedPeriod] = useState('both');\n  const handleDateSelect = async (start1, end1, start2, end2) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await axios.post('http://localhost:5000/get-map-data', {\n        start_date1: start1,\n        end_date1: end1,\n        start_date2: start2,\n        end_date2: end2\n      });\n      if (response.data.error) throw new Error(response.data.error);\n      setMapData(response.data);\n    } catch (error) {\n      console.error('Error loading data:', error);\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleDownloadData = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/download-change-data', {\n        geojson: mapData.water_boundaries\n      }, {\n        responseType: 'blob'\n      });\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', 'coastline_changes.zip');\n      document.body.appendChild(link);\n      link.click();\n      link.remove();\n    } catch (error) {\n      console.error('Download failed:', error);\n      setError('Failed to download change data');\n    }\n  };\n  const simplifyGeometry = geometry => {\n    try {\n      return turf.simplify(turf.feature(geometry), {\n        tolerance: 0.001,\n        highQuality: true\n      }).geometry;\n    } catch (e) {\n      console.error('Geometry simplification failed:', e);\n      return geometry;\n    }\n  };\n  const renderChangeAnalysis = () => {\n    var _mapData$water_bounda, _mapData$water_bounda2, _mapData$water_bounda3, _mapData$water_bounda4, _mapData$water_bounda5, _mapData$water_bounda6;\n    if (!(mapData !== null && mapData !== void 0 && mapData.water_boundaries)) return null;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [selectedPeriod !== 'period2' && ((_mapData$water_bounda = mapData.water_boundaries.period1) === null || _mapData$water_bounda === void 0 ? void 0 : (_mapData$water_bounda2 = _mapData$water_bounda.features) === null || _mapData$water_bounda2 === void 0 ? void 0 : _mapData$water_bounda2.map((feature, index) => /*#__PURE__*/_jsxDEV(GeoJSON, {\n        data: simplifyGeometry(feature.geometry),\n        style: {\n          ...layerStyles.waterBoundary,\n          color: '#0000ff'\n        }\n      }, `p1-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this))), selectedPeriod !== 'period1' && ((_mapData$water_bounda3 = mapData.water_boundaries.period2) === null || _mapData$water_bounda3 === void 0 ? void 0 : (_mapData$water_bounda4 = _mapData$water_bounda3.features) === null || _mapData$water_bounda4 === void 0 ? void 0 : _mapData$water_bounda4.map((feature, index) => /*#__PURE__*/_jsxDEV(GeoJSON, {\n        data: simplifyGeometry(feature.geometry),\n        style: {\n          ...layerStyles.waterBoundary,\n          color: '#00ff00'\n        }\n      }, `p2-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this))), (_mapData$water_bounda5 = mapData.water_boundaries.difference) === null || _mapData$water_bounda5 === void 0 ? void 0 : (_mapData$water_bounda6 = _mapData$water_bounda5.features) === null || _mapData$water_bounda6 === void 0 ? void 0 : _mapData$water_bounda6.map((feature, index) => {\n        const isErosion = feature.properties.area_change < 0;\n        return /*#__PURE__*/_jsxDEV(GeoJSON, {\n          data: simplifyGeometry(feature.geometry),\n          style: isErosion ? layerStyles.changeErosion : layerStyles.changeAccretion\n        }, `diff-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true);\n  };\n  const renderLayerControls = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"layer-controls\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"time-period-selector\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `time-period-btn ${selectedPeriod === 'both' ? 'active' : ''}`,\n        onClick: () => setSelectedPeriod('both'),\n        children: \"Both Periods\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `time-period-btn ${selectedPeriod === 'period1' ? 'active' : ''}`,\n        onClick: () => setSelectedPeriod('period1'),\n        children: \"Baseline Period\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `time-period-btn ${selectedPeriod === 'period2' ? 'active' : ''}`,\n        onClick: () => setSelectedPeriod('period2'),\n        children: \"Current Period\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: activeLayer === 'change' ? 'active' : '',\n      onClick: () => setActiveLayer('change'),\n      children: \"Change Analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: activeLayer === 'rgb' ? 'active' : '',\n      onClick: () => setActiveLayer('rgb'),\n      children: \"Satellite Comparison\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"download-btn\",\n      onClick: handleDownloadData,\n      children: \"Export Change Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n  const ChangeLegend = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"change-legend\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Visual Legend\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"legend-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"legend-color\",\n        style: {\n          backgroundColor: '#0000ff'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Baseline Coastline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"legend-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"legend-color\",\n        style: {\n          backgroundColor: '#00ff00'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Current Coastline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"legend-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"legend-color\",\n        style: {\n          backgroundColor: '#ff0000',\n          borderColor: '#ff0000'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Erosion Areas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"legend-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"legend-color\",\n        style: {\n          backgroundColor: '#00ff00',\n          borderColor: '#00ff00'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Accretion Areas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-container\",\n    children: [/*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [46.5107, -63.4168],\n      zoom: 9,\n      style: {\n        height: '600px',\n        width: '100%'\n      },\n      whenCreated: setMapInstance,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        attribution: \"\\xA9 OpenStreetMap contributors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), activeLayer === 'rgb' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [selectedPeriod !== 'period2' && (mapData === null || mapData === void 0 ? void 0 : (_mapData$period = mapData.period1) === null || _mapData$period === void 0 ? void 0 : _mapData$period.image_url) && /*#__PURE__*/_jsxDEV(ImageOverlay, {\n          url: mapData.period1.image_url,\n          bounds: mapData.bounds,\n          opacity: selectedPeriod === 'both' ? 0.5 : 0.8\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 15\n        }, this), selectedPeriod !== 'period1' && (mapData === null || mapData === void 0 ? void 0 : (_mapData$period2 = mapData.period2) === null || _mapData$period2 === void 0 ? void 0 : _mapData$period2.image_url) && /*#__PURE__*/_jsxDEV(ImageOverlay, {\n          url: mapData.period2.image_url,\n          bounds: mapData.bounds,\n          opacity: 0.8\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), activeLayer === 'change' && renderChangeAnalysis(), /*#__PURE__*/_jsxDEV(GeoJSON, {\n        data: mapData === null || mapData === void 0 ? void 0 : mapData.geojson,\n        style: layerStyles.studyArea\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChangeLegend, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar right-sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Coastal Change Analyzer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n          onDateSelect: handleDateSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this), renderLayerControls()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-overlay\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 11\n      }, this), \"Analyzing coastal changes...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-overlay\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 211,\n    columnNumber: 5\n  }, this);\n};\n_s(MapComponent, \"CD9b6FtpljS8Qgt+tDv4eCbK0jQ=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useEffect","useState","MapContainer","TileLayer","ImageOverlay","GeoJSON","L","axios","turf","DatePicker","jsxDEV","_jsxDEV","Fragment","_Fragment","layerStyles","waterBoundary","color","weight","fillOpacity","studyArea","changeErosion","dashArray","fillColor","changeAccretion","MapComponent","_s","_mapData$period","_mapData$period2","mapInstance","setMapInstance","mapData","setMapData","loading","setLoading","error","setError","activeLayer","setActiveLayer","selectedPeriod","setSelectedPeriod","handleDateSelect","start1","end1","start2","end2","response","post","start_date1","end_date1","start_date2","end_date2","data","Error","console","message","handleDownloadData","geojson","water_boundaries","responseType","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","remove","simplifyGeometry","geometry","simplify","feature","tolerance","highQuality","e","renderChangeAnalysis","_mapData$water_bounda","_mapData$water_bounda2","_mapData$water_bounda3","_mapData$water_bounda4","_mapData$water_bounda5","_mapData$water_bounda6","children","period1","features","map","index","style","fileName","_jsxFileName","lineNumber","columnNumber","period2","difference","isErosion","properties","area_change","renderLayerControls","className","onClick","ChangeLegend","backgroundColor","borderColor","center","zoom","height","width","whenCreated","attribution","image_url","bounds","opacity","onDateSelect","_c","$RefreshReg$"],"sources":["C:/Users/dell/Desktop/Coastline/frontend/src/MapComponent.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { MapContainer, TileLayer, ImageOverlay, GeoJSON } from 'react-leaflet';\r\nimport L from 'leaflet';\r\nimport axios from 'axios';\r\nimport * as turf from '@turf/turf';\r\nimport DatePicker from './DatePicker';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport './styles.css';\r\n\r\nconst layerStyles = {\r\n  waterBoundary: {\r\n    color: '#00f',\r\n    weight: 2,\r\n    fillOpacity: 0\r\n  },\r\n  studyArea: {\r\n    color: '#ff0000',\r\n    weight: 2\r\n  },\r\n  changeErosion: {\r\n    color: '#ff0000',\r\n    weight: 3,\r\n    dashArray: '5,5',\r\n    fillColor: '#ff0000',\r\n    fillOpacity: 0.3\r\n  },\r\n  changeAccretion: {\r\n    color: '#00ff00',\r\n    weight: 3,\r\n    dashArray: '5,5',\r\n    fillColor: '#00ff00',\r\n    fillOpacity: 0.3\r\n  }\r\n};\r\n\r\nconst MapComponent = () => {\r\n  const [mapInstance, setMapInstance] = useState(null);\r\n  const [mapData, setMapData] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [activeLayer, setActiveLayer] = useState('change');\r\n  const [selectedPeriod, setSelectedPeriod] = useState('both');\r\n\r\n  const handleDateSelect = async (start1, end1, start2, end2) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/get-map-data', {\r\n        start_date1: start1,\r\n        end_date1: end1,\r\n        start_date2: start2,\r\n        end_date2: end2\r\n      });\r\n\r\n      if (response.data.error) throw new Error(response.data.error);\r\n      setMapData(response.data);\r\n    } catch (error) {\r\n      console.error('Error loading data:', error);\r\n      setError(error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleDownloadData = async () => {\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/download-change-data', {\r\n        geojson: mapData.water_boundaries\r\n      }, {\r\n        responseType: 'blob'\r\n      });\r\n\r\n      const url = window.URL.createObjectURL(new Blob([response.data]));\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.setAttribute('download', 'coastline_changes.zip');\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      link.remove();\r\n    } catch (error) {\r\n      console.error('Download failed:', error);\r\n      setError('Failed to download change data');\r\n    }\r\n  };\r\n\r\n  const simplifyGeometry = (geometry) => {\r\n    try {\r\n      return turf.simplify(turf.feature(geometry), {\r\n        tolerance: 0.001,\r\n        highQuality: true\r\n      }).geometry;\r\n    } catch (e) {\r\n      console.error('Geometry simplification failed:', e);\r\n      return geometry;\r\n    }\r\n  };\r\n\r\n  const renderChangeAnalysis = () => {\r\n    if (!mapData?.water_boundaries) return null;\r\n\r\n    return (\r\n      <>\r\n        {/* Baseline coastline */}\r\n        {selectedPeriod !== 'period2' && mapData.water_boundaries.period1?.features?.map((feature, index) => (\r\n          <GeoJSON\r\n            key={`p1-${index}`}\r\n            data={simplifyGeometry(feature.geometry)}\r\n            style={{ ...layerStyles.waterBoundary, color: '#0000ff' }}\r\n          />\r\n        ))}\r\n\r\n        {/* Current coastline */}\r\n        {selectedPeriod !== 'period1' && mapData.water_boundaries.period2?.features?.map((feature, index) => (\r\n          <GeoJSON\r\n            key={`p2-${index}`}\r\n            data={simplifyGeometry(feature.geometry)}\r\n            style={{ ...layerStyles.waterBoundary, color: '#00ff00' }}\r\n          />\r\n        ))}\r\n\r\n        {/* Change detection */}\r\n        {mapData.water_boundaries.difference?.features?.map((feature, index) => {\r\n          const isErosion = feature.properties.area_change < 0;\r\n          return (\r\n            <GeoJSON\r\n              key={`diff-${index}`}\r\n              data={simplifyGeometry(feature.geometry)}\r\n              style={isErosion ? layerStyles.changeErosion : layerStyles.changeAccretion}\r\n            />\r\n          );\r\n        })}\r\n      </>\r\n    );\r\n  };\r\n\r\n  const renderLayerControls = () => (\r\n    <div className=\"layer-controls\">\r\n      <div className=\"time-period-selector\">\r\n        <button\r\n          className={`time-period-btn ${selectedPeriod === 'both' ? 'active' : ''}`}\r\n          onClick={() => setSelectedPeriod('both')}\r\n        >\r\n          Both Periods\r\n        </button>\r\n        <button\r\n          className={`time-period-btn ${selectedPeriod === 'period1' ? 'active' : ''}`}\r\n          onClick={() => setSelectedPeriod('period1')}\r\n        >\r\n          Baseline Period\r\n        </button>\r\n        <button\r\n          className={`time-period-btn ${selectedPeriod === 'period2' ? 'active' : ''}`}\r\n          onClick={() => setSelectedPeriod('period2')}\r\n        >\r\n          Current Period\r\n        </button>\r\n      </div>\r\n\r\n      <button\r\n        className={activeLayer === 'change' ? 'active' : ''}\r\n        onClick={() => setActiveLayer('change')}\r\n      >\r\n        Change Analysis\r\n      </button>\r\n      \r\n      <button\r\n        className={activeLayer === 'rgb' ? 'active' : ''}\r\n        onClick={() => setActiveLayer('rgb')}\r\n      >\r\n        Satellite Comparison\r\n      </button>\r\n\r\n      <button\r\n        className=\"download-btn\"\r\n        onClick={handleDownloadData}\r\n      >\r\n        Export Change Data\r\n      </button>\r\n    </div>\r\n  );\r\n\r\n  const ChangeLegend = () => (\r\n    <div className=\"change-legend\">\r\n      <h4>Visual Legend</h4>\r\n      <div className=\"legend-item\">\r\n        <div className=\"legend-color\" style={{ backgroundColor: '#0000ff' }} />\r\n        <span>Baseline Coastline</span>\r\n      </div>\r\n      <div className=\"legend-item\">\r\n        <div className=\"legend-color\" style={{ backgroundColor: '#00ff00' }} />\r\n        <span>Current Coastline</span>\r\n      </div>\r\n      <div className=\"legend-item\">\r\n        <div className=\"legend-color\" style={{ \r\n          backgroundColor: '#ff0000',\r\n          borderColor: '#ff0000'\r\n        }} />\r\n        <span>Erosion Areas</span>\r\n      </div>\r\n      <div className=\"legend-item\">\r\n        <div className=\"legend-color\" style={{ \r\n          backgroundColor: '#00ff00',\r\n          borderColor: '#00ff00'\r\n        }} />\r\n        <span>Accretion Areas</span>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"map-container\">\r\n      <MapContainer \r\n        center={[46.5107, -63.4168]}\r\n        zoom={9}\r\n        style={{ height: '600px', width: '100%' }}\r\n        whenCreated={setMapInstance}\r\n      >\r\n        <TileLayer\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          attribution='&copy; OpenStreetMap contributors'\r\n        />\r\n\r\n        {activeLayer === 'rgb' && (\r\n          <>\r\n            {selectedPeriod !== 'period2' && mapData?.period1?.image_url && (\r\n              <ImageOverlay\r\n                url={mapData.period1.image_url}\r\n                bounds={mapData.bounds}\r\n                opacity={selectedPeriod === 'both' ? 0.5 : 0.8}\r\n              />\r\n            )}\r\n            {selectedPeriod !== 'period1' && mapData?.period2?.image_url && (\r\n              <ImageOverlay\r\n                url={mapData.period2.image_url}\r\n                bounds={mapData.bounds}\r\n                opacity={0.8}\r\n              />\r\n            )}\r\n          </>\r\n        )}\r\n\r\n        {activeLayer === 'change' && renderChangeAnalysis()}\r\n\r\n        <GeoJSON \r\n          data={mapData?.geojson}\r\n          style={layerStyles.studyArea}\r\n        />\r\n        <ChangeLegend />\r\n      </MapContainer>\r\n\r\n      <div className=\"sidebar right-sidebar\">\r\n        <div className=\"sidebar-header\">\r\n          <h3>Coastal Change Analyzer</h3>\r\n          <DatePicker onDateSelect={handleDateSelect} />\r\n        </div>\r\n        {renderLayerControls()}\r\n      </div>\r\n\r\n      {loading && (\r\n        <div className=\"loading-overlay\">\r\n          <div className=\"spinner\"></div>\r\n          Analyzing coastal changes...\r\n        </div>\r\n      )}\r\n      {error && <div className=\"error-overlay\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapComponent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}