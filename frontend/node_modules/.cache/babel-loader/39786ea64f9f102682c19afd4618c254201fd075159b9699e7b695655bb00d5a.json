{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\Coastline\\\\frontend\\\\src\\\\MapComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { MapContainer, TileLayer, ImageOverlay, GeoJSON } from 'react-leaflet';\nimport { getMapData } from './api';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapComponent = ({\n  boundary\n}) => {\n  _s();\n  const [mapData, setMapData] = useState(null);\n  const [mapInstance, setMapInstance] = useState(null);\n  useEffect(() => {\n    const fetchImagery = async () => {\n      if (!boundary) return;\n      try {\n        const data = await getMapData(boundary);\n        setMapData(data);\n        if (mapInstance && data.bounds) {\n          const bounds = L.latLngBounds(data.bounds);\n          mapInstance.fitBounds(bounds, {\n            padding: [50, 50]\n          });\n        }\n      } catch (error) {\n        console.error('Error fetching imagery:', error);\n      }\n    };\n    fetchImagery();\n  }, [boundary, mapInstance]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-container\",\n    children: /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [46.5107, -63.4168],\n      zoom: 9,\n      style: {\n        height: '600px',\n        width: '100%'\n      },\n      whenCreated: setMapInstance,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        attribution: \"\\xA9 OpenStreetMap contributors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), (mapData === null || mapData === void 0 ? void 0 : mapData.image_url) && /*#__PURE__*/_jsxDEV(ImageOverlay, {\n        url: mapData.image_url,\n        bounds: mapData.bounds,\n        opacity: 0.8\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this), boundary && /*#__PURE__*/_jsxDEV(GeoJSON, {\n        data: boundary,\n        style: {\n          color: '#ff0000',\n          weight: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(MapComponent, \"P4oWSbu6bY+11e27liUjqm8SMT8=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useEffect","useState","MapContainer","TileLayer","ImageOverlay","GeoJSON","getMapData","L","jsxDEV","_jsxDEV","MapComponent","boundary","_s","mapData","setMapData","mapInstance","setMapInstance","fetchImagery","data","bounds","latLngBounds","fitBounds","padding","error","console","className","children","center","zoom","style","height","width","whenCreated","url","attribution","fileName","_jsxFileName","lineNumber","columnNumber","image_url","opacity","color","weight","_c","$RefreshReg$"],"sources":["C:/Users/dell/Desktop/Coastline/frontend/src/MapComponent.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { MapContainer, TileLayer, ImageOverlay, GeoJSON } from 'react-leaflet';\r\nimport { getMapData } from './api';\r\nimport L from 'leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport './styles.css';\r\n\r\nconst MapComponent = ({ boundary }) => {\r\n    const [mapData, setMapData] = useState(null);\r\n    const [mapInstance, setMapInstance] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchImagery = async () => {\r\n            if (!boundary) return;\r\n            \r\n            try {\r\n                const data = await getMapData(boundary);\r\n                setMapData(data);\r\n                \r\n                if (mapInstance && data.bounds) {\r\n                    const bounds = L.latLngBounds(data.bounds);\r\n                    mapInstance.fitBounds(bounds, { padding: [50, 50] });\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching imagery:', error);\r\n            }\r\n        };\r\n\r\n        fetchImagery();\r\n    }, [boundary, mapInstance]);\r\n\r\n    return (\r\n        <div className=\"map-container\">\r\n            <MapContainer \r\n                center={[46.5107, -63.4168]}\r\n                zoom={9}\r\n                style={{ height: '600px', width: '100%' }}\r\n                whenCreated={setMapInstance}\r\n            >\r\n                <TileLayer\r\n                    url=\"https://{s.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                    attribution='&copy; OpenStreetMap contributors'\r\n                />\r\n                \r\n                {mapData?.image_url && (\r\n                    <ImageOverlay\r\n                        url={mapData.image_url}\r\n                        bounds={mapData.bounds}\r\n                        opacity={0.8}\r\n                    />\r\n                )}\r\n                \r\n                {boundary && (\r\n                    <GeoJSON \r\n                        data={boundary}\r\n                        style={{ color: '#ff0000', weight: 2 }}\r\n                    />\r\n                )}\r\n            </MapContainer>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MapComponent;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,YAAY,EAAEC,SAAS,EAAEC,YAAY,EAAEC,OAAO,QAAQ,eAAe;AAC9E,SAASC,UAAU,QAAQ,OAAO;AAClC,OAAOC,CAAC,MAAM,SAAS;AACvB,OAAO,0BAA0B;AACjC,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAEpDD,SAAS,CAAC,MAAM;IACZ,MAAMiB,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI,CAACN,QAAQ,EAAE;MAEf,IAAI;QACA,MAAMO,IAAI,GAAG,MAAMZ,UAAU,CAACK,QAAQ,CAAC;QACvCG,UAAU,CAACI,IAAI,CAAC;QAEhB,IAAIH,WAAW,IAAIG,IAAI,CAACC,MAAM,EAAE;UAC5B,MAAMA,MAAM,GAAGZ,CAAC,CAACa,YAAY,CAACF,IAAI,CAACC,MAAM,CAAC;UAC1CJ,WAAW,CAACM,SAAS,CAACF,MAAM,EAAE;YAAEG,OAAO,EAAE,CAAC,EAAE,EAAE,EAAE;UAAE,CAAC,CAAC;QACxD;MACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACnD;IACJ,CAAC;IAEDN,YAAY,CAAC,CAAC;EAClB,CAAC,EAAE,CAACN,QAAQ,EAAEI,WAAW,CAAC,CAAC;EAE3B,oBACIN,OAAA;IAAKgB,SAAS,EAAC,eAAe;IAAAC,QAAA,eAC1BjB,OAAA,CAACP,YAAY;MACTyB,MAAM,EAAE,CAAC,OAAO,EAAE,CAAC,OAAO,CAAE;MAC5BC,IAAI,EAAE,CAAE;MACRC,KAAK,EAAE;QAAEC,MAAM,EAAE,OAAO;QAAEC,KAAK,EAAE;MAAO,CAAE;MAC1CC,WAAW,EAAEhB,cAAe;MAAAU,QAAA,gBAE5BjB,OAAA,CAACN,SAAS;QACN8B,GAAG,EAAC,mDAAmD;QACvDC,WAAW,EAAC;MAAmC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClD,CAAC,EAED,CAAAzB,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAE0B,SAAS,kBACf9B,OAAA,CAACL,YAAY;QACT6B,GAAG,EAAEpB,OAAO,CAAC0B,SAAU;QACvBpB,MAAM,EAAEN,OAAO,CAACM,MAAO;QACvBqB,OAAO,EAAE;MAAI;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChB,CACJ,EAEA3B,QAAQ,iBACLF,OAAA,CAACJ,OAAO;QACJa,IAAI,EAAEP,QAAS;QACfkB,KAAK,EAAE;UAAEY,KAAK,EAAE,SAAS;UAAEC,MAAM,EAAE;QAAE;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C,CACJ;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACS;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACd,CAAC;AAEd,CAAC;AAAC1B,EAAA,CAtDIF,YAAY;AAAAiC,EAAA,GAAZjC,YAAY;AAwDlB,eAAeA,YAAY;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}