{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\Coastline\\\\coastline_analysis\\\\frontend\\\\src\\\\MapComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { MapContainer, TileLayer, GeoJSON } from 'react-leaflet';\nimport axios from 'axios';\nimport * as turf from '@turf/turf';\nimport DatePicker from './DatePicker';\nimport 'leaflet/dist/leaflet.css';\nimport './styles.css';\nimport L from 'leaflet';\n\n// Fix Leaflet marker icons\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png')\n});\nconst layerStyles = {\n  baseline: {\n    color: '#ff0000',\n    weight: 3,\n    fillOpacity: 0,\n    className: 'baseline-coastline'\n  },\n  comparison: {\n    color: '#00ff00',\n    weight: 2,\n    fillOpacity: 0,\n    className: 'current-coastline'\n  },\n  erosion: {\n    color: '#ff0000',\n    weight: 3,\n    dashArray: '5,5',\n    fillColor: '#ff0000',\n    fillOpacity: 0.3,\n    className: 'erosion-area'\n  },\n  accretion: {\n    color: '#00ff00',\n    weight: 3,\n    dashArray: '5,5',\n    fillColor: '#00ff00',\n    fillOpacity: 0.3,\n    className: 'accretion-area'\n  }\n};\nconst MapComponent = () => {\n  _s();\n  const [mapData, setMapData] = useState({\n    baseline: null,\n    comparison: null,\n    erosion: null,\n    accretion: null\n  });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [bounds] = useState(new L.LatLngBounds([46.0, -64.0], [47.0, -63.0]));\n  const handleDateSelect = async endDate => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await axios.post('http://localhost:5000/get-map-data', {\n        end_date: endDate\n      });\n      if (response.data.error) {\n        throw new Error(response.data.error);\n      }\n      setMapData({\n        baseline: response.data.baseline_geojson,\n        comparison: response.data.comparison_vectors,\n        erosion: response.data.erosion,\n        accretion: response.data.accretion\n      });\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('API Error:', error);\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || error.message || 'Failed to load coastal data');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const processGeoJSON = data => {\n    if (!data) return null;\n    try {\n      // Simplify geometry for better performance\n      const simplified = turf.simplify(data, {\n        tolerance: 0.001,\n        highQuality: true\n      });\n\n      // Handle both FeatureCollection and single Geometry\n      if (simplified.type === 'FeatureCollection') {\n        return simplified.features.map(feature => feature.geometry);\n      }\n      return simplified;\n    } catch (e) {\n      console.warn('Geometry processing error:', e);\n      return data;\n    }\n  };\n  const renderLayer = (data, style) => {\n    const processedData = processGeoJSON(data);\n    if (!processedData) return null;\n    return Array.isArray(processedData) ? processedData.map((geom, index) => /*#__PURE__*/_jsxDEV(GeoJSON, {\n      data: geom,\n      style: style\n    }, `${style.className}-${index}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(GeoJSON, {\n      data: processedData,\n      style: style\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-container\",\n    children: [/*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [46.5107, -63.4168],\n      zoom: 10,\n      bounds: bounds,\n      style: {\n        height: '100vh',\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        attribution: \"\\xA9 OpenStreetMap contributors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), renderLayer(mapData.baseline, layerStyles.baseline), renderLayer(mapData.comparison, layerStyles.comparison), renderLayer(mapData.erosion, layerStyles.erosion), renderLayer(mapData.accretion, layerStyles.accretion), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"change-legend\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Coastal Changes Legend\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-color baseline-coastline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"2000 Baseline Coastline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-color current-coastline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Current Coastline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-color erosion-area\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Erosion Areas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-color accretion-area\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Accretion Areas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-panel\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"analysis-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"PEI Coastal Change Analysis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n          onDateSelect: handleDateSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-overlay\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"spinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Analyzing satellite data...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: [\"\\u26A0\\uFE0F \", error, /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error-tip\",\n            children: \"Try selecting different dates or check the console for details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n};\n_s(MapComponent, \"aJj8Ya0u93wH+fsECFQkOyGEwow=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useState","useEffect","MapContainer","TileLayer","GeoJSON","axios","turf","DatePicker","L","jsxDEV","_jsxDEV","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","layerStyles","baseline","color","weight","fillOpacity","className","comparison","erosion","dashArray","fillColor","accretion","MapComponent","_s","mapData","setMapData","loading","setLoading","error","setError","bounds","LatLngBounds","handleDateSelect","endDate","response","post","end_date","data","Error","baseline_geojson","comparison_vectors","_error$response","_error$response$data","console","message","processGeoJSON","simplified","simplify","tolerance","highQuality","type","features","map","feature","geometry","e","warn","renderLayer","style","processedData","Array","isArray","geom","index","fileName","_jsxFileName","lineNumber","columnNumber","children","center","zoom","height","width","url","attribution","onDateSelect","_c","$RefreshReg$"],"sources":["C:/Users/dell/Desktop/Coastline/coastline_analysis/frontend/src/MapComponent.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { MapContainer, TileLayer, GeoJSON } from 'react-leaflet';\r\nimport axios from 'axios';\r\nimport * as turf from '@turf/turf';\r\nimport DatePicker from './DatePicker';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport './styles.css';\r\nimport L from 'leaflet';\r\n\r\n// Fix Leaflet marker icons\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\nL.Icon.Default.mergeOptions({\r\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\r\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\r\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png')\r\n});\r\n\r\nconst layerStyles = {\r\n  baseline: { \r\n    color: '#ff0000', \r\n    weight: 3,\r\n    fillOpacity: 0,\r\n    className: 'baseline-coastline'\r\n  },\r\n  comparison: { \r\n    color: '#00ff00', \r\n    weight: 2,\r\n    fillOpacity: 0,\r\n    className: 'current-coastline'\r\n  },\r\n  erosion: { \r\n    color: '#ff0000', \r\n    weight: 3,\r\n    dashArray: '5,5',\r\n    fillColor: '#ff0000',\r\n    fillOpacity: 0.3,\r\n    className: 'erosion-area'\r\n  },\r\n  accretion: {\r\n    color: '#00ff00',\r\n    weight: 3,\r\n    dashArray: '5,5',\r\n    fillColor: '#00ff00',\r\n    fillOpacity: 0.3,\r\n    className: 'accretion-area'\r\n  }\r\n};\r\n\r\nconst MapComponent = () => {\r\n  const [mapData, setMapData] = useState({\r\n    baseline: null,\r\n    comparison: null,\r\n    erosion: null,\r\n    accretion: null\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [bounds] = useState(new L.LatLngBounds(\r\n    [46.0, -64.0],\r\n    [47.0, -63.0]\r\n  ));\r\n\r\n  const handleDateSelect = async (endDate) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/get-map-data', {\r\n        end_date: endDate\r\n      });\r\n\r\n      if (response.data.error) {\r\n        throw new Error(response.data.error);\r\n      }\r\n\r\n      setMapData({\r\n        baseline: response.data.baseline_geojson,\r\n        comparison: response.data.comparison_vectors,\r\n        erosion: response.data.erosion,\r\n        accretion: response.data.accretion\r\n      });\r\n\r\n    } catch (error) {\r\n      console.error('API Error:', error);\r\n      setError(error.response?.data?.error || \r\n              error.message || \r\n              'Failed to load coastal data');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const processGeoJSON = (data) => {\r\n    if (!data) return null;\r\n    \r\n    try {\r\n      // Simplify geometry for better performance\r\n      const simplified = turf.simplify(data, {\r\n        tolerance: 0.001,\r\n        highQuality: true\r\n      });\r\n      \r\n      // Handle both FeatureCollection and single Geometry\r\n      if (simplified.type === 'FeatureCollection') {\r\n        return simplified.features.map(feature => feature.geometry);\r\n      }\r\n      return simplified;\r\n    } catch (e) {\r\n      console.warn('Geometry processing error:', e);\r\n      return data;\r\n    }\r\n  };\r\n\r\n  const renderLayer = (data, style) => {\r\n    const processedData = processGeoJSON(data);\r\n    \r\n    if (!processedData) return null;\r\n\r\n    return Array.isArray(processedData) \r\n      ? processedData.map((geom, index) => (\r\n          <GeoJSON\r\n            key={`${style.className}-${index}`}\r\n            data={geom}\r\n            style={style}\r\n          />\r\n        ))\r\n      : <GeoJSON data={processedData} style={style} />;\r\n  };\r\n\r\n  return (\r\n    <div className=\"map-container\">\r\n      <MapContainer \r\n        center={[46.5107, -63.4168]}\r\n        zoom={10}\r\n        bounds={bounds}\r\n        style={{ height: '100vh', width: '100%' }}\r\n      >\r\n        <TileLayer\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          attribution='&copy; OpenStreetMap contributors'\r\n        />\r\n\r\n        {/* Baseline Shapefile */}\r\n        {renderLayer(mapData.baseline, layerStyles.baseline)}\r\n\r\n        {/* Current Coastline */}\r\n        {renderLayer(mapData.comparison, layerStyles.comparison)}\r\n\r\n        {/* Changes */}\r\n        {renderLayer(mapData.erosion, layerStyles.erosion)}\r\n        {renderLayer(mapData.accretion, layerStyles.accretion)}\r\n\r\n        <div className=\"change-legend\">\r\n          <h4>Coastal Changes Legend</h4>\r\n          <div className=\"legend-item\">\r\n            <div className=\"legend-color baseline-coastline\" />\r\n            <span>2000 Baseline Coastline</span>\r\n          </div>\r\n          <div className=\"legend-item\">\r\n            <div className=\"legend-color current-coastline\" />\r\n            <span>Current Coastline</span>\r\n          </div>\r\n          <div className=\"legend-item\">\r\n            <div className=\"legend-color erosion-area\" />\r\n            <span>Erosion Areas</span>\r\n          </div>\r\n          <div className=\"legend-item\">\r\n            <div className=\"legend-color accretion-area\" />\r\n            <span>Accretion Areas</span>\r\n          </div>\r\n        </div>\r\n      </MapContainer>\r\n\r\n      <div className=\"control-panel\">\r\n        <div className=\"analysis-controls\">\r\n          <h2>PEI Coastal Change Analysis</h2>\r\n          <DatePicker onDateSelect={handleDateSelect} />\r\n          \r\n          {loading && (\r\n            <div className=\"loading-overlay\">\r\n              <div className=\"spinner\" />\r\n              <p>Analyzing satellite data...</p>\r\n            </div>\r\n          )}\r\n\r\n          {error && (\r\n            <div className=\"error-message\">\r\n              ⚠️ {error}\r\n              <p className=\"error-tip\">Try selecting different dates or check the console for details</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapComponent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}