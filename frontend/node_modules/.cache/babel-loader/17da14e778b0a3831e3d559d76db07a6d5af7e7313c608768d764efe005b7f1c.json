{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\Coastline\\\\coastline_analysis\\\\frontend\\\\src\\\\MapComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { MapContainer, TileLayer, GeoJSON } from 'react-leaflet';\nimport axios from 'axios';\nimport * as turf from '@turf/turf';\nimport DatePicker from './DatePicker';\nimport 'leaflet/dist/leaflet.css';\nimport './styles.css';\nimport L from 'leaflet';\n\n// Fix Leaflet marker icons\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png')\n});\nconst layerStyles = {\n  baseline: {\n    color: '#ff0000',\n    weight: 2,\n    fillOpacity: 0\n  },\n  comparison: {\n    color: '#00ff00',\n    weight: 2,\n    fillOpacity: 0\n  },\n  erosion: {\n    color: '#ff0000',\n    weight: 3,\n    dashArray: '5,5',\n    fillColor: '#ff0000',\n    fillOpacity: 0.3\n  },\n  accretion: {\n    color: '#00ff00',\n    weight: 3,\n    dashArray: '5,5',\n    fillColor: '#00ff00',\n    fillOpacity: 0.3\n  }\n};\nconst MapComponent = () => {\n  _s();\n  const [mapData, setMapData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [selectedYear, setSelectedYear] = useState('2023-06-30');\n  useEffect(() => {\n    // Load initial data when component mounts\n    handleDateSelect(selectedYear);\n  }, []);\n  const handleDateSelect = async endDate => {\n    setLoading(true);\n    try {\n      const response = await axios.post('http://localhost:5000/get-map-data', {\n        end_date: endDate\n      });\n      if (response.data.error) throw new Error(response.data.error);\n      setMapData({\n        ...response.data,\n        bounds: new L.LatLngBounds(new L.LatLng(46.0, -64.0), new L.LatLng(47.0, -63.0))\n      });\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Error loading data:', error);\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const simplifyGeometry = geometry => {\n    try {\n      return turf.simplify(turf.feature(geometry), {\n        tolerance: 0.001,\n        highQuality: true\n      }).geometry;\n    } catch (e) {\n      console.error('Geometry simplification failed:', e);\n      return geometry;\n    }\n  };\n  const renderBaseline = () => {\n    if (!(mapData !== null && mapData !== void 0 && mapData.baseline_geojson)) return null;\n    return /*#__PURE__*/_jsxDEV(GeoJSON, {\n      data: mapData.baseline_geojson,\n      style: layerStyles.baseline\n    }, \"baseline\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this);\n  };\n  const renderComparison = () => {\n    var _mapData$water_bounda;\n    if (!(mapData !== null && mapData !== void 0 && (_mapData$water_bounda = mapData.water_boundaries) !== null && _mapData$water_bounda !== void 0 && _mapData$water_bounda.comparison)) return null;\n    return mapData.water_boundaries.comparison.features.map((feature, index) => /*#__PURE__*/_jsxDEV(GeoJSON, {\n      data: simplifyGeometry(feature.geometry),\n      style: layerStyles.comparison\n    }, `comp-${index}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this));\n  };\n  const renderChanges = () => {\n    var _mapData$water_bounda2, _mapData$water_bounda3, _mapData$water_bounda4, _mapData$water_bounda5;\n    if (!(mapData !== null && mapData !== void 0 && mapData.water_boundaries)) return null;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [(_mapData$water_bounda2 = mapData.water_boundaries.erosion) === null || _mapData$water_bounda2 === void 0 ? void 0 : (_mapData$water_bounda3 = _mapData$water_bounda2.features) === null || _mapData$water_bounda3 === void 0 ? void 0 : _mapData$water_bounda3.map((feature, index) => /*#__PURE__*/_jsxDEV(GeoJSON, {\n        data: simplifyGeometry(feature.geometry),\n        style: layerStyles.erosion\n      }, `ero-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this)), (_mapData$water_bounda4 = mapData.water_boundaries.accretion) === null || _mapData$water_bounda4 === void 0 ? void 0 : (_mapData$water_bounda5 = _mapData$water_bounda4.features) === null || _mapData$water_bounda5 === void 0 ? void 0 : _mapData$water_bounda5.map((feature, index) => /*#__PURE__*/_jsxDEV(GeoJSON, {\n        data: simplifyGeometry(feature.geometry),\n        style: layerStyles.accretion\n      }, `acc-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-container\",\n    children: [/*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [46.5107, -63.4168],\n      zoom: 10,\n      style: {\n        height: '100vh',\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        attribution: \"\\xA9 OpenStreetMap contributors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), renderBaseline(), renderComparison(), renderChanges(), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"change-legend\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Legend\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-color\",\n            style: {\n              backgroundColor: '#ff0000'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"2000 Baseline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-color\",\n            style: {\n              backgroundColor: '#00ff00'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Current Coastline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-color\",\n            style: {\n              backgroundColor: '#ff0000'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Erosion Areas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-color\",\n            style: {\n              backgroundColor: '#00ff00'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Accretion Areas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"PEI Coastal Change Analyzer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n          onDateSelect: handleDateSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-overlay\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Analyzing coastal changes...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-overlay\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n};\n_s(MapComponent, \"r0saz/g5mNUmX1kPabqMVrB8Wlw=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useEffect","useState","MapContainer","TileLayer","GeoJSON","axios","turf","DatePicker","L","jsxDEV","_jsxDEV","Fragment","_Fragment","Icon","Default","prototype","_getIconUrl","mergeOptions","iconUrl","require","shadowUrl","layerStyles","baseline","color","weight","fillOpacity","comparison","erosion","dashArray","fillColor","accretion","MapComponent","_s","mapData","setMapData","loading","setLoading","error","setError","selectedYear","setSelectedYear","handleDateSelect","endDate","response","post","end_date","data","Error","bounds","LatLngBounds","LatLng","_error$response","_error$response$data","console","message","simplifyGeometry","geometry","simplify","feature","tolerance","highQuality","e","renderBaseline","baseline_geojson","style","fileName","_jsxFileName","lineNumber","columnNumber","renderComparison","_mapData$water_bounda","water_boundaries","features","map","index","renderChanges","_mapData$water_bounda2","_mapData$water_bounda3","_mapData$water_bounda4","_mapData$water_bounda5","children","className","center","zoom","height","width","url","attribution","backgroundColor","onDateSelect","_c","$RefreshReg$"],"sources":["C:/Users/dell/Desktop/Coastline/coastline_analysis/frontend/src/MapComponent.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { MapContainer, TileLayer, GeoJSON } from 'react-leaflet';\r\nimport axios from 'axios';\r\nimport * as turf from '@turf/turf';\r\nimport DatePicker from './DatePicker';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport './styles.css';\r\nimport L from 'leaflet';\r\n\r\n// Fix Leaflet marker icons\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\nL.Icon.Default.mergeOptions({\r\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\r\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png')\r\n});\r\n\r\nconst layerStyles = {\r\n  baseline: { \r\n    color: '#ff0000', \r\n    weight: 2,\r\n    fillOpacity: 0\r\n  },\r\n  comparison: { \r\n    color: '#00ff00', \r\n    weight: 2,\r\n    fillOpacity: 0\r\n  },\r\n  erosion: { \r\n    color: '#ff0000', \r\n    weight: 3,\r\n    dashArray: '5,5',\r\n    fillColor: '#ff0000',\r\n    fillOpacity: 0.3\r\n  },\r\n  accretion: {\r\n    color: '#00ff00',\r\n    weight: 3,\r\n    dashArray: '5,5',\r\n    fillColor: '#00ff00',\r\n    fillOpacity: 0.3\r\n  }\r\n};\r\n\r\nconst MapComponent = () => {\r\n  const [mapData, setMapData] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [selectedYear, setSelectedYear] = useState('2023-06-30');\r\n\r\n  useEffect(() => {\r\n    // Load initial data when component mounts\r\n    handleDateSelect(selectedYear);\r\n  }, []);\r\n\r\n  const handleDateSelect = async (endDate) => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/get-map-data', {\r\n        end_date: endDate\r\n      });\r\n\r\n      if (response.data.error) throw new Error(response.data.error);\r\n      \r\n      setMapData({\r\n        ...response.data,\r\n        bounds: new L.LatLngBounds(\r\n          new L.LatLng(46.0, -64.0),\r\n          new L.LatLng(47.0, -63.0)\r\n        )\r\n      });\r\n      \r\n    } catch (error) {\r\n      console.error('Error loading data:', error);\r\n      setError(error.response?.data?.error || error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const simplifyGeometry = (geometry) => {\r\n    try {\r\n      return turf.simplify(turf.feature(geometry), {\r\n        tolerance: 0.001,\r\n        highQuality: true\r\n      }).geometry;\r\n    } catch (e) {\r\n      console.error('Geometry simplification failed:', e);\r\n      return geometry;\r\n    }\r\n  };\r\n\r\n  const renderBaseline = () => {\r\n    if (!mapData?.baseline_geojson) return null;\r\n    \r\n    return (\r\n      <GeoJSON\r\n        key=\"baseline\"\r\n        data={mapData.baseline_geojson}\r\n        style={layerStyles.baseline}\r\n      />\r\n    );\r\n  };\r\n\r\n  const renderComparison = () => {\r\n    if (!mapData?.water_boundaries?.comparison) return null;\r\n\r\n    return mapData.water_boundaries.comparison.features.map((feature, index) => (\r\n      <GeoJSON\r\n        key={`comp-${index}`}\r\n        data={simplifyGeometry(feature.geometry)}\r\n        style={layerStyles.comparison}\r\n      />\r\n    ));\r\n  };\r\n\r\n  const renderChanges = () => {\r\n    if (!mapData?.water_boundaries) return null;\r\n\r\n    return (\r\n      <>\r\n        {mapData.water_boundaries.erosion?.features?.map((feature, index) => (\r\n          <GeoJSON\r\n            key={`ero-${index}`}\r\n            data={simplifyGeometry(feature.geometry)}\r\n            style={layerStyles.erosion}\r\n          />\r\n        ))}\r\n        {mapData.water_boundaries.accretion?.features?.map((feature, index) => (\r\n          <GeoJSON\r\n            key={`acc-${index}`}\r\n            data={simplifyGeometry(feature.geometry)}\r\n            style={layerStyles.accretion}\r\n          />\r\n        ))}\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"map-container\">\r\n      <MapContainer \r\n        center={[46.5107, -63.4168]}\r\n        zoom={10}\r\n        style={{ height: '100vh', width: '100%' }}\r\n      >\r\n        <TileLayer\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          attribution='&copy; OpenStreetMap contributors'\r\n        />\r\n\r\n        {renderBaseline()}\r\n        {renderComparison()}\r\n        {renderChanges()}\r\n\r\n        <div className=\"change-legend\">\r\n          <h4>Legend</h4>\r\n          <div className=\"legend-item\">\r\n            <div className=\"legend-color\" style={{ backgroundColor: '#ff0000' }} />\r\n            <span>2000 Baseline</span>\r\n          </div>\r\n          <div className=\"legend-item\">\r\n            <div className=\"legend-color\" style={{ backgroundColor: '#00ff00' }} />\r\n            <span>Current Coastline</span>\r\n          </div>\r\n          <div className=\"legend-item\">\r\n            <div className=\"legend-color\" style={{ backgroundColor: '#ff0000' }} />\r\n            <span>Erosion Areas</span>\r\n          </div>\r\n          <div className=\"legend-item\">\r\n            <div className=\"legend-color\" style={{ backgroundColor: '#00ff00' }} />\r\n            <span>Accretion Areas</span>\r\n          </div>\r\n        </div>\r\n      </MapContainer>\r\n\r\n      <div className=\"sidebar\">\r\n        <div className=\"sidebar-header\">\r\n          <h3>PEI Coastal Change Analyzer</h3>\r\n          <DatePicker onDateSelect={handleDateSelect} />\r\n        </div>\r\n        \r\n        {loading && (\r\n          <div className=\"loading-overlay\">\r\n            <div className=\"spinner\"></div>\r\n            <p>Analyzing coastal changes...</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {error && (\r\n        <div className=\"error-overlay\">\r\n          {error}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapComponent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}