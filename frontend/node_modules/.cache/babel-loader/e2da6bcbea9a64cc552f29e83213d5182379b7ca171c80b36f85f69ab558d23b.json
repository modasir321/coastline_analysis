{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\Coastline\\\\coastline_analysis\\\\frontend\\\\src\\\\MapComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { MapContainer, TileLayer, GeoJSON, ImageOverlay } from 'react-leaflet';\nimport axios from 'axios';\nimport DatePicker from './DatePicker';\nimport 'leaflet/dist/leaflet.css';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapComponent = () => {\n  _s();\n  var _baseLayer$features$, _baseLayer$features$$;\n  const [baseLayer, setBaseLayer] = useState(null);\n  const [analysisData, setAnalysisData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    // Load 2000 baseline shapefile\n    axios.get('http://localhost:5000/get-base-layer').then(res => setBaseLayer(res.data)).catch(err => console.error('Error loading base layer:', err));\n  }, []);\n  const handleAnalyze = async endDate => {\n    setLoading(true);\n    try {\n      const response = await axios.post('http://localhost:5000/get-imagery', {\n        end_date: endDate\n      });\n      setAnalysisData({\n        thumbnail: response.data.thumbnail,\n        bounds: response.data.bounds,\n        waterMask: response.data.water_mask\n      });\n    } catch (error) {\n      var _error$response;\n      console.error('Analysis error:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-container\",\n    children: /*#__PURE__*/_jsxDEV(MapContainer, {\n      bounds: (baseLayer === null || baseLayer === void 0 ? void 0 : (_baseLayer$features$ = baseLayer.features[0]) === null || _baseLayer$features$ === void 0 ? void 0 : (_baseLayer$features$$ = _baseLayer$features$.geometry) === null || _baseLayer$features$$ === void 0 ? void 0 : _baseLayer$features$$.coordinates) && baseLayer.features[0].geometry.coordinates[0].map(([lng, lat]) => [lat, lng]),\n      style: {\n        height: '100vh',\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        attribution: \"\\xA9 OpenStreetMap contributors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), baseLayer && /*#__PURE__*/_jsxDEV(GeoJSON, {\n        data: baseLayer,\n        style: {\n          color: '#ff0000',\n          weight: 3,\n          fillOpacity: 0\n        },\n        onEachFeature: (feature, layer) => {\n          layer.bindTooltip(`PEI Coastline 2000`);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this), (analysisData === null || analysisData === void 0 ? void 0 : analysisData.thumbnail) && /*#__PURE__*/_jsxDEV(ImageOverlay, {\n        url: analysisData.thumbnail,\n        bounds: analysisData.bounds,\n        opacity: 0.85\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this), (analysisData === null || analysisData === void 0 ? void 0 : analysisData.waterMask) && /*#__PURE__*/_jsxDEV(GeoJSON, {\n        data: analysisData.waterMask,\n        style: {\n          color: '#0000ff',\n          weight: 1,\n          fillColor: '#0000ff',\n          fillOpacity: 0.3\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control-panel\",\n        children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n          onDateSelect: handleAnalyze\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\",\n          children: \"Processing...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(MapComponent, \"He0nhiSxivfTJup3NPaxEMvaG5s=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useState","useEffect","MapContainer","TileLayer","GeoJSON","ImageOverlay","axios","DatePicker","jsxDEV","_jsxDEV","MapComponent","_s","_baseLayer$features$","_baseLayer$features$$","baseLayer","setBaseLayer","analysisData","setAnalysisData","loading","setLoading","get","then","res","data","catch","err","console","error","handleAnalyze","endDate","response","post","end_date","thumbnail","bounds","waterMask","water_mask","_error$response","message","className","children","features","geometry","coordinates","map","lng","lat","style","height","width","url","attribution","fileName","_jsxFileName","lineNumber","columnNumber","color","weight","fillOpacity","onEachFeature","feature","layer","bindTooltip","opacity","fillColor","onDateSelect","_c","$RefreshReg$"],"sources":["C:/Users/dell/Desktop/Coastline/coastline_analysis/frontend/src/MapComponent.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { MapContainer, TileLayer, GeoJSON, ImageOverlay } from 'react-leaflet';\r\nimport axios from 'axios';\r\nimport DatePicker from './DatePicker';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport './styles.css';\r\n\r\nconst MapComponent = () => {\r\n    const [baseLayer, setBaseLayer] = useState(null);\r\n    const [analysisData, setAnalysisData] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        // Load 2000 baseline shapefile\r\n        axios.get('http://localhost:5000/get-base-layer')\r\n            .then(res => setBaseLayer(res.data))\r\n            .catch(err => console.error('Error loading base layer:', err));\r\n    }, []);\r\n\r\n    const handleAnalyze = async (endDate) => {\r\n        setLoading(true);\r\n        try {\r\n            const response = await axios.post('http://localhost:5000/get-imagery', {\r\n                end_date: endDate\r\n            });\r\n\r\n            setAnalysisData({\r\n                thumbnail: response.data.thumbnail,\r\n                bounds: response.data.bounds,\r\n                waterMask: response.data.water_mask\r\n            });\r\n\r\n        } catch (error) {\r\n            console.error('Analysis error:', error.response?.data || error.message);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"map-container\">\r\n            <MapContainer \r\n                bounds={baseLayer?.features[0]?.geometry?.coordinates && \r\n                        baseLayer.features[0].geometry.coordinates[0].map(([lng, lat]) => [lat, lng])}\r\n                style={{ height: '100vh', width: '100%' }}\r\n            >\r\n                <TileLayer\r\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                    attribution='&copy; OpenStreetMap contributors'\r\n                />\r\n\r\n                {/* 2000 Baseline */}\r\n                {baseLayer && (\r\n                    <GeoJSON\r\n                        data={baseLayer}\r\n                        style={{\r\n                            color: '#ff0000',\r\n                            weight: 3,\r\n                            fillOpacity: 0\r\n                        }}\r\n                        onEachFeature={(feature, layer) => {\r\n                            layer.bindTooltip(`PEI Coastline 2000`);\r\n                        }}\r\n                    />\r\n                )}\r\n\r\n                {/* Satellite Imagery */}\r\n                {analysisData?.thumbnail && (\r\n                    <ImageOverlay\r\n                        url={analysisData.thumbnail}\r\n                        bounds={analysisData.bounds}\r\n                        opacity={0.85}\r\n                    />\r\n                )}\r\n\r\n                {/* Water Mask */}\r\n                {analysisData?.waterMask && (\r\n                    <GeoJSON\r\n                        data={analysisData.waterMask}\r\n                        style={{\r\n                            color: '#0000ff',\r\n                            weight: 1,\r\n                            fillColor: '#0000ff',\r\n                            fillOpacity: 0.3\r\n                        }}\r\n                    />\r\n                )}\r\n\r\n                {/* Analysis Controls */}\r\n                <div className=\"control-panel\">\r\n                    <DatePicker onDateSelect={handleAnalyze} />\r\n                    {loading && <div className=\"loading-spinner\">Processing...</div>}\r\n                </div>\r\n            </MapContainer>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MapComponent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}